# Generated by Django 5.1.3 on 2024-12-07 03:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cattle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('tag_number', models.CharField(max_length=50, unique=True, verbose_name='Tag Number')),
                ('breed', models.CharField(max_length=100, verbose_name='Breed')),
                ('date_of_birth', models.DateField(verbose_name='Date of Birth')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1, verbose_name='Gender')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Weight (kg)')),
                ('status', models.CharField(choices=[('active', 'Active'), ('sold', 'Sold'), ('deceased', 'Deceased')], default='active', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cattle', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Cattle',
                'verbose_name_plural': 'Cattle',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Breeding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('breeding_type', models.CharField(choices=[('natural', 'Natural'), ('artificial', 'Artificial Insemination')], max_length=20, verbose_name='Breeding Type')),
                ('date', models.DateField(verbose_name='Breeding Date')),
                ('sire_details', models.CharField(max_length=200, verbose_name='Sire Details')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('successful', 'Successful'), ('unsuccessful', 'Unsuccessful')], default='pending', max_length=20, verbose_name='Status')),
                ('expected_calving_date', models.DateField(blank=True, null=True, verbose_name='Expected Calving Date')),
                ('actual_calving_date', models.DateField(blank=True, null=True, verbose_name='Actual Calving Date')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Recorded By')),
                ('cattle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breeding_records', to='farm_management.cattle', verbose_name='Cattle')),
            ],
            options={
                'verbose_name': 'Breeding Record',
                'verbose_name_plural': 'Breeding Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Feed Name')),
                ('feed_type', models.CharField(choices=[('forage', 'Forage'), ('concentrate', 'Concentrate'), ('supplement', 'Supplement'), ('mineral', 'Mineral')], max_length=20, verbose_name='Feed Type')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity (kg)')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cost per Unit')),
                ('purchase_date', models.DateField(verbose_name='Purchase Date')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='Expiry Date')),
                ('supplier', models.CharField(max_length=200, verbose_name='Supplier')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Recorded By')),
            ],
            options={
                'verbose_name': 'Feed',
                'verbose_name_plural': 'Feeds',
                'ordering': ['-purchase_date'],
            },
        ),
        migrations.CreateModel(
            name='HealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_type', models.CharField(choices=[('vaccination', 'Vaccination'), ('treatment', 'Treatment'), ('check_up', 'Check-up'), ('deworming', 'Deworming'), ('insemination', 'Insemination'), ('pregnancy_check', 'Pregnancy Check')], max_length=20, verbose_name='Record Type')),
                ('date', models.DateField(verbose_name='Date')),
                ('description', models.TextField(verbose_name='Description')),
                ('medicine', models.CharField(blank=True, max_length=200, verbose_name='Medicine')),
                ('dosage', models.CharField(blank=True, max_length=100, verbose_name='Dosage')),
                ('vet_name', models.CharField(max_length=100, verbose_name='Veterinarian Name')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('next_checkup_date', models.DateField(blank=True, null=True, verbose_name='Next Checkup Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('attachment', models.FileField(blank=True, null=True, upload_to='health_records/', verbose_name='Attachment')),
                ('cattle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_records', to='farm_management.cattle', verbose_name='Cattle')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Recorded By')),
            ],
            options={
                'verbose_name': 'Health Record',
                'verbose_name_plural': 'Health Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MilkProduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('milking_session', models.CharField(choices=[('morning', 'Morning'), ('afternoon', 'Afternoon'), ('evening', 'Evening')], max_length=10, verbose_name='Milking Session')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Quantity (L)')),
                ('fat_content', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Fat Content (%)')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('cattle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milk_productions', to='farm_management.cattle', verbose_name='Cattle')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='milk_productions', to=settings.AUTH_USER_MODEL, verbose_name='Recorded By')),
            ],
            options={
                'verbose_name': 'Milk Production',
                'verbose_name_plural': 'Milk Productions',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('health_checkup', 'Health Checkup Due'), ('vaccination', 'Vaccination Due'), ('breeding', 'Breeding Related'), ('feed_inventory', 'Feed Inventory Alert'), ('milk_production', 'Milk Production Alert'), ('general', 'General Notice')], max_length=20, verbose_name='Notification Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10, verbose_name='Priority')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('related_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='farm_management.cattle', verbose_name='Related Cattle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=10, verbose_name='Action')),
                ('model_name', models.CharField(max_length=50, verbose_name='Model Name')),
                ('object_id', models.PositiveIntegerField(verbose_name='Object ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='farm_manage_timesta_e014be_idx'), models.Index(fields=['user'], name='farm_manage_user_id_398145_idx'), models.Index(fields=['action'], name='farm_manage_action_778502_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='cattle',
            index=models.Index(fields=['tag_number'], name='farm_manage_tag_num_1ee81c_idx'),
        ),
        migrations.AddIndex(
            model_name='cattle',
            index=models.Index(fields=['status'], name='farm_manage_status_f1c2d7_idx'),
        ),
        migrations.AddIndex(
            model_name='cattle',
            index=models.Index(fields=['created_at'], name='farm_manage_created_2499ee_idx'),
        ),
        migrations.AddIndex(
            model_name='breeding',
            index=models.Index(fields=['date'], name='farm_manage_date_6cb4c2_idx'),
        ),
        migrations.AddIndex(
            model_name='breeding',
            index=models.Index(fields=['status'], name='farm_manage_status_b07fd0_idx'),
        ),
        migrations.AddIndex(
            model_name='breeding',
            index=models.Index(fields=['expected_calving_date'], name='farm_manage_expecte_cd37f0_idx'),
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['feed_type'], name='farm_manage_feed_ty_00ed7e_idx'),
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['purchase_date'], name='farm_manage_purchas_249e18_idx'),
        ),
        migrations.AddIndex(
            model_name='feed',
            index=models.Index(fields=['expiry_date'], name='farm_manage_expiry__5707d9_idx'),
        ),
        migrations.AddIndex(
            model_name='healthrecord',
            index=models.Index(fields=['date'], name='farm_manage_date_72588a_idx'),
        ),
        migrations.AddIndex(
            model_name='healthrecord',
            index=models.Index(fields=['next_checkup_date'], name='farm_manage_next_ch_6edf8d_idx'),
        ),
        migrations.AddIndex(
            model_name='healthrecord',
            index=models.Index(fields=['record_type'], name='farm_manage_record__35ed5d_idx'),
        ),
        migrations.AddIndex(
            model_name='milkproduction',
            index=models.Index(fields=['date'], name='farm_manage_date_28a69c_idx'),
        ),
        migrations.AddIndex(
            model_name='milkproduction',
            index=models.Index(fields=['cattle', 'date'], name='farm_manage_cattle__d9411b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='milkproduction',
            unique_together={('cattle', 'date', 'milking_session')},
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='farm_manage_created_04d9eb_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='farm_manage_notific_8fca40_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['is_read'], name='farm_manage_is_read_2c5bf2_idx'),
        ),
    ]
